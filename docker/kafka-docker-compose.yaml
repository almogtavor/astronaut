version: "3"
#services:
#  zookeeper:
#    image: 'bitnami/zookeeper:latest'
#    ports:
#      - '2181:2181'
#    environment:
#      - ALLOW_ANONYMOUS_LOGIN=yes
#  kafka:
#    image: 'bitnami/kafka:latest'
#    ports:
#      - '9092:9092'
#    environment:
#      - KAFKA_BROKER_ID=1
#      - ALLOW_PLAINTEXT_LISTENER=yes
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
#      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
#    depends_on:
#      - zookeeper
#    command: "bash -c 'echo Waiting for Kafka to be ready... && \
#               /opt/bitnami/kafka/bin/kafka-topics.sh --create --bootstrap-server kafka:9092 --topic mytopic --partitions 3 --replication-factor 3 && \
#               /opt/bitnami/kafka/bin/kafka-topics.sh --describe --bootstrap-server kafka:9092 --topic mytopic'"
#  kafka-ui:
#    container_name: kafka-ui
#    image: provectuslabs/kafka-ui:latest
#    ports:
#      - "9100:9100"
#    depends_on:
#      - zookeeper
#      - kafka
#    environment:
#      KAFKA_CLUSTERS_0_NAME: local
#      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
#      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
#  kafka_manager:
#    image: hlebalbau/kafka-manager:stable
#    ports:
#      - "9000:9000"
#    environment:
#      ZK_HOSTS: "zookeeper:2181"
#      APPLICATION_SECRET: "random-secret"
networks:
  kafka-net:
    driver: bridge

services:
  zookeeper-server:
    image: 'bitnami/zookeeper:latest'
    networks:
      - kafka-net
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
#  kafka-server1:
#    image: 'bitnami/kafka:latest'
#    networks:
#      - kafka-net
#    ports:
#      - '9092:9092'
#    environment:
#      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181
#      - ALLOW_PLAINTEXT_LISTENER=yes
#      - KAFKA_BROKER_ID=1
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
#      - KAFKA_CFG_LISTENERS=CLIENT://:9093,EXTERNAL://:9092
#      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9093,EXTERNAL://localhost:9092
#      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
##      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
##      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
#    #      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka1:9093,CLIENT://kafka1:9092
#
##      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,INTERNAL://kafka1:19092
##      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
#    depends_on:
#      - zookeeper-server
  kafka-server2:
    image: 'bitnami/kafka:latest'
    networks:
      - kafka-net
    ports:
      - '9093:9093'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka-server2:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
#      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,INTERNAL://kafka1:19092
#      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
    depends_on:
      - zookeeper-server
  kafdrop:
    image: obsidiandynamics/kafdrop
    networks:
      - kafka-net
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "PLAINTEXT://kafka-server2:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
#      - "kafka-server1"
      - "kafka-server2"
#  kafka-ui:
#    container_name: kafka-ui
#    image: provectuslabs/kafka-ui:latest
#    ports:
#      - "9100:8080"
#    depends_on:
#      - zookeeper-server
#      - kafka-server1
#      - kafka-server2
#    environment:
#      KAFKA_CLUSTERS_0_NAME: local
#      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-server1:9092,kafka-server2:9093,kafka-server3:9094
#      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper-server:2181
  kafka_manager:
    image: hlebalbau/kafka-manager:stable
    ports:
      - "9200:9000"
    depends_on:
      - zookeeper-server
#      - kafka-server1
      - kafka-server2
    environment:
      ZK_HOSTS: localhost:2181
      APPLICATION_SECRET: "random-secret"
      KM_ARGS: -Djava.net.preferIPv4Stack=true
